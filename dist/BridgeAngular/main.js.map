{"version":3,"sources":["./src/app/components/message-list/message-list.component.html","./src/app/components/message-list/message-list.component.ts","./src/app/components/chat/chat.component.html","./src/app/components/chat/chat.component.ts","./src/app/components/friend-list/friend-list.component.html","./src/app/components/friend-list/friend-list.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/chat-window/chat-window.component.ts","./src/app/components/chat-window/chat-window.component.html","./src/app/services/user.service.ts","./src/app/services/chat.service.ts","./src/app/services/message.service.ts","./src/app/services/friend-list.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<!-- Message History List-->\n<div class=\"messages-header\">\n    <h2>Messages</h2>\n    <div id=\"new-message-button\">\n        <button type=\"button\" class=\"btn btn-transparent\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"100%\" width=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\"\n                viewBox=\"0 0 16 16\">\n                <path\n                    d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\">\n                </path>\n                <path fill-rule=\"evenodd\"\n                    d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\">\n                </path>\n            </svg>\n        </button>\n    </div>\n</div>\n\n<div id=\"plist\" class=\"people-list\">\n    <div class=\"input-group\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search...\">\n        <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-secondary\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\"\n                    viewBox=\"0 0 16 16\">\n                    <path\n                        d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\">\n                    </path>\n                </svg>\n            </button>\n        </div>\n    </div>\n\n\n    <ul class=\"list-unstyled mt-2 mb-0\">\n        <li class=\"clearfix active\" *ngFor=\"let name of names; index as i\">\n            <a [routerLink]=\"['/chat', chatIds[i]]\">\n            <mat-card class=\"chat-card\">\n                <mat-card-header>\n                    <mat-card-title>\n                        <h3>{{name}}</h3>\n                    </mat-card-title>\n                    <mat-card-subtitle>{{messages[i]}}</mat-card-subtitle>\n                </mat-card-header>\n            </mat-card>\n        </a>\n        </li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\nimport { MessageService } from 'src/app/services/message.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { IChatModel } from '../../models/ichat-model';\n\n@Component({\n    selector: 'app-message-list',\n    templateUrl: './message-list.component.html',\n    styleUrls: ['./message-list.component.sass']\n})\n\nexport class MessageListComponent implements OnInit {\n    chats: IChatModel[];\n    userId: number = 1;\n\n    names: string[] = [];\n    chatIds: number[] = [];\n    messages: string[] = [];\n    userIds: number[] = [];\n\n    constructor(chatService: ChatService, userService: UserService, messageService: MessageService) {\n        // get all the chats for a user\n        chatService.getChatList(this.userId).subscribe((result: IChatModel[]) => {\n            this.chats = result;      \n            this.chats.forEach(chat=>{\n                chat.users.forEach(user=>{\n                    if(user != this.userId){\n                        this.userIds.push(user);\n                    }\n                })\n                this.chatIds.push(chat.chatId);\n            })\n\n            // get name of friend for each chat\n            for (let i = 0; i < this.userIds.length; i++) {\n                userService.getName(this.userIds[i]).subscribe((name: string) => {\n                    this.names.push(name);\n                });\n            }\n\n            // get most recent message for each chat\n            for (let i = 0; i < this.chatIds.length; i++) {\n                messageService.getMostRecentMessage(this.chatIds[i]).subscribe((message: string) => {\n                    this.messages.push(message);\n                });\n            }\n        });\n    }\n\n    ngOnInit(): void { }\n}\n","<!-- Chat -->\n<div class=chat *ngIf=\"dataLoaded\">\n    <div class=\"chat-header clearfix\">\n            <h2 class=\"friend-name\">{{ friendName }}</h2>\n            <mat-divider></mat-divider>\n    </div>\n    <div class=\"chat\" >\n        <div class=\"chat-history\" *ngFor=\"let msg of messages\">\n            <ul >\n                <li class=\"clearfix\" *ngIf=\"msg.isSender == true\">\n                    <div class=\"message other-message float-right\">\n                        {{ msg.originalText }}\n                    </div>\n                </li>\n                <li class=\"clearfix\" *ngIf=\"msg.isSender == false\">\n                    <div class=\"message-data\">\n                        <span class=\"message-data-time\">{{ msg.dateCreated }}</span>\n                    </div>\n                    <div class=\"message my-message\">\n                        {{ msg.translatedText }} <br /><p class=translated-text>|   {{ msg.originalText }}</p>\n                    </div>\n                </li>\n            </ul>\n        </div>\n        <div class=\"chat-message clearfix\">\n            <div class=\"input-group mb-0\">\n                <input id=\"input-message\" type=\"text\" class=\"form-control\" placeholder=\"Enter text here...\" />\n                <div class=\"input-group-append\">\n                    <button type=\"button\" class=\"btn btn-secondary\" onclick=\"sendMessage()\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                            class=\"bi bi-arrow-right-circle-fill\" viewBox=\"0 0 16 16\">\n                            <path\n                                d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\" />\n                        </svg>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IChatModel } from 'src/app/models/ichat-model';\nimport { MessageService } from 'src/app/services/message.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { IMessageModel } from '../../models/imessage-model';\nimport { ChatService } from '../../services/chat.service';\n\n@Component({\n    selector: 'app-chat',\n    templateUrl: './chat.component.html',\n    styleUrls: ['./chat.component.sass'],\n})\nexport class ChatComponent implements OnInit {\n    messages: IMessageModel[] = [];\n    chatId: number;\n    userId: number = 1;\n    friendId: number;\n    message: string;\n    friendName: string;\n    dataLoaded: boolean = false;\n\n    constructor(\n        private route: ActivatedRoute,\n        private messageService: MessageService,\n        private chatService: ChatService,\n        private userService: UserService\n    ) {\n\n    }\n    ngOnInit(): void {\n        this.route.paramMap.subscribe(params => {\n            this.chatId = Number(params.get('chatId'));\n\n            // get all messages in a chat\n            this.messageService\n                .getMessagesfromChat(this.chatId)\n                .subscribe((result: IMessageModel[]) => {\n                    this.messages = result;\n                    this.friendId = this.messages[0].friendId != this.userId ? this.messages[0].friendId : this.messages[0].userId;\n                    this.userService\n                    .getName(this.friendId)\n                    .subscribe((name: string) => {\n                        this.friendName = name;\n                    });\n                });\n    \n            this.dataLoaded = true;\n        });\n\n    }\n    public sendMessage(): void {\n        var input = <HTMLInputElement> document.getElementById(\"input-message\");\n        if (!input) {\n            return;\n        }\n    }\n}\n","<mat-action-list>\n    <h2 class=\"friends-header\">Friends ({{friendsData.length}})</h2>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Search</mat-label>\n        <input matInput>\n    </mat-form-field>\n    <button mat-button class=\"btn btn-secondary\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"></path>\n        </svg>\n    </button>    \n    <button mat-list-item class=\"friends\" *ngFor=\"let item of friendsData\">{{item}}\n        <mat-divider></mat-divider>\n    </button>\n</mat-action-list>\n <router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { IFriendListModel } from 'src/app/models/ifriend-list-model';\nimport { FriendListService } from 'src/app/services/friend-list.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n    selector: 'app-friend-list',\n    templateUrl: './friend-list.component.html',\n    styleUrls: ['./friend-list.component.sass']\n})\nexport class FriendListComponent implements OnInit {\n    friendIds: number[] = [];\n    friendsData: string[] = [];\n    userId: number = 1;\n\n    constructor(friendsService: FriendListService, userService: UserService) {\n        // get the userIds for all friends of the user\n        friendsService.getFriendList(this.userId).subscribe((result: IFriendListModel) => {\n            this.friendIds = result.friends;\n            // get the names of all friends using userId\n            for (let i = 0; i < this.friendIds.length; i++) {\n                userService.getName(this.friendIds[i]).subscribe((name: string) => {\n                    this.friendsData.push(name);\n                });\n            }\n        });\n\n    }\n    ngOnInit(): void {\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'BridgeAngular';\n}\n\n\n","<mat-sidenav-container class=\"sidenav-container\">\n    <!--Side Nav Bar, persistent across all screens-->\n    <mat-sidenav class=\"sidenav\" mode=\"side\" opened>\n        <div class=\"btn-group\">\n            <button mat-button routerLink=\"/chat/1\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" fill=\"white\" class=\"bi bi-chat-dots-fill\"\n                    viewBox=\"0 0 16 16\">\n                    <path\n                        d=\"M16 8c0 3.866-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.584.296-1.925.864-4.181 1.234-.2.032-.352-.176-.273-.362.354-.836.674-1.95.77-2.966C.744 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7zM5 8a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm4 0a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\">\n                    </path>\n                </svg>\n            </button>\n            <button mat-button routerLink=\"/friends\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" fill=\"white\" class=\"bi bi-people-fill\"\n                    viewBox=\"0 0 16 16\">\n                    <path d=\"M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"></path>\n                    <path fill-rule=\"evenodd\"\n                        d=\"M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z\">\n                    </path>\n                    <path d=\"M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\"></path>\n                </svg>\n            </button>\n            <button mat-button>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" fill=\"white\" class=\"bi bi-gear-fill\"\n                    viewBox=\"0 0 16 16\">\n                    <path\n                        d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\">\n                    </path>\n                </svg>\n            </button>\n        </div>\n    </mat-sidenav>\n\n    <!--Main Content-->\n    <mat-sidenav-content>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { MessageListComponent } from './components/message-list/message-list.component';\nimport { FriendListComponent } from './components/friend-list/friend-list.component';\nimport { ChatWindowComponent } from './components/chat-window/chat-window.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ChatComponent,\n        MessageListComponent,\n        FriendListComponent,\n        ChatWindowComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatDividerModule,\n        MatListModule,\n        MatCardModule,\n        MatInputModule,\n        MatGridListModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat-window',\n  templateUrl: './chat-window.component.html',\n  styleUrls: ['./chat-window.component.sass']\n})\nexport class ChatWindowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-grid-list cols=\"8\" rowHeight=\"100vh\">\n    <mat-grid-tile class=\"message-list\" colspan=2>\n        <app-message-list></app-message-list>\n    </mat-grid-tile>\n    <mat-grid-tile class=\"chat\" colspan=6>\n        <app-chat></app-chat>\n    </mat-grid-tile>\n</mat-grid-list>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    hostUrl: string = 'http://localhost:8080/';\n    //hostUrl: string = 'https://bridgechat.azurewebsites.net/';\n    constructor(private http: HttpClient) { }\n\n    // get the name of a specific userId\n    getName(userId: number) {\n        return this.http.get<string>(this.hostUrl + `users/${userId}/name`);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IChatModel } from '../models/ichat-model';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService {\n    hostUrl: string = 'http://localhost:8080/';\n    //hostUrl: string = 'https://bridgechat.azurewebsites.net/';\n\n    constructor(private http: HttpClient) { }\n\n    // get a single chat using chatId\n    getChat(chatId: number) {\n        return this.http.get<IChatModel>(this.hostUrl + `chats/${chatId}`);\n    }\n\n    // get a list of chats using userId\n    getChatList(userId: number){\n        return this.http.get<IChatModel[]>(this.hostUrl + `users/${userId}/chats`)\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IMessageModel } from '../models/imessage-model';\n@Injectable({\n    providedIn: 'root',\n})\nexport class MessageService {\n    hostUrl: string = 'http://localhost:8080/';\n    //hostUrl: string = 'https://bridgechat.azurewebsites.net/';\n\n    constructor(private http: HttpClient) { }\n\n    // get all messages for a chatId\n    getMessagesfromChat(chatId: number) {\n        return this.http.get<IMessageModel[]>(this.hostUrl + `chats/${chatId}/messages`);\n    }\n\n    // get the single most recent message for a chatId\n    getMostRecentMessage(chatId: number) {\n        return this.http.get<string>(this.hostUrl + `chats/${chatId}/lastMessage`);\n    }\n\n    sendMessage(message) {\n        return this.http.post(this.hostUrl + 'messages/' + message.chatId, message);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IFriendListModel } from '../models/ifriend-list-model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FriendListService {\n    hostUrl: string = 'http://localhost:8080/';\n    // hostUrl: string = 'https://bridgechat.azurewebsites.net/';\n\n    constructor(private http: HttpClient) { }\n\n    // retrieve a list of all friendIds using userId\n    getFriendList(userId: number) {\n        return this.http.get<IFriendListModel>(this.hostUrl + `users/${userId}/friends`);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FriendListComponent } from './components/friend-list/friend-list.component';\nimport { ChatWindowComponent } from './components/chat-window/chat-window.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/chat/1', pathMatch: \"full\" },\n    { path: 'friends', component: FriendListComponent },\n    { path: 'chat/:chatId', component: ChatWindowComponent },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}